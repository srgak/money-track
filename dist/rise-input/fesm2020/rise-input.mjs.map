{"version":3,"file":"rise-input.mjs","sources":["../../../projects/rise-input/src/lib/rise-input.directive.ts","../../../projects/rise-input/src/lib/rise-input.module.ts","../../../projects/rise-input/src/public-api.ts","../../../projects/rise-input/src/rise-input.ts"],"sourcesContent":["import { AfterViewInit, Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[activeInput]'\n})\nexport class RiseInputDirective implements AfterViewInit {\n  constructor(private el: ElementRef, private control: NgControl) {}\n\n  private input = this.el.nativeElement;\n\n  @Input('activeInput') public placeholder: string;\n  @Input() public prefix: string; \n  @HostListener('focus') onFocus(): void {\n    this.input.closest('.input__field').classList.add('input_active');\n    this.input.placeholder = this.input.parentNode.nextSibling && this.input.parentNode.nextSibling.innerText ? '' : this.placeholder;\n  }\n  @HostListener('blur') onBlur(): void {\n    if(!this.control.value) {\n      this.input.closest('.input__field').classList.remove('input_active');\n      this.input.placeholder = '';\n    }\n    if(this.input.parentNode.nextSibling && this.input.parentNode.nextSibling.innerText) this.input.placeholder = '';\n  }\n  @HostListener('nzOnOpenChange', ['$event']) onNzOpen(event: any): void {\n    return event ? this.onFocus() : this.onBlur();\n  }\n  @HostListener('nzFocus') onNzFocus(): void {\n    this.onFocus();\n  }\n  @HostListener('nzBlur') onNzBlur(): void {\n    setTimeout(()=>this.onBlur(), 1000);\n  }\n\n  ngAfterViewInit(): void {\n    this.input = this.input.children.length ? this.input.querySelector('input') : this.input;\n    if (this.control.value || this.prefix) {\n      this.onFocus();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RiseInputDirective } from './rise-input.directive';\n\n\n@NgModule({\n  declarations: [\n    RiseInputDirective\n  ],\n  imports: [\n  ],\n  exports: [\n    RiseInputDirective\n  ]\n})\nexport class RiseInputModule { }\n","/*\n * Public API Surface of rise-input\n */\n\nexport * from './lib/rise-input.directive';\nexport * from './lib/rise-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAMa,kBAAkB;IAC7B,YAAoB,EAAc,EAAU,OAAkB;QAA1C,OAAE,GAAF,EAAE,CAAY;QAAU,YAAO,GAAP,OAAO,CAAW;QAEtD,UAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;KAF4B;IAM3C,OAAO;QAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;KACnI;IACqB,MAAM;QAC1B,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACrE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;SAC7B;QACD,IAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS;YAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;KAClH;IAC2C,QAAQ,CAAC,KAAU;QAC7D,OAAO,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;KAC/C;IACwB,SAAS;QAChC,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IACuB,QAAQ;QAC9B,UAAU,CAAC,MAAI,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;KACrC;IAED,eAAe;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACzF,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;KACF;;+GAjCU,kBAAkB;mGAAlB,kBAAkB;2FAAlB,kBAAkB;kBAH9B,SAAS;mBAAC;oBACT,QAAQ,EAAE,eAAe;iBAC1B;yHAM8B,WAAW;sBAAvC,KAAK;uBAAC,aAAa;gBACJ,MAAM;sBAArB,KAAK;gBACiB,OAAO;sBAA7B,YAAY;uBAAC,OAAO;gBAIC,MAAM;sBAA3B,YAAY;uBAAC,MAAM;gBAOwB,QAAQ;sBAAnD,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAGjB,SAAS;sBAAjC,YAAY;uBAAC,SAAS;gBAGC,QAAQ;sBAA/B,YAAY;uBAAC,QAAQ;;;MChBX,eAAe;;4GAAf,eAAe;6GAAf,eAAe,iBARxB,kBAAkB,aAKlB,kBAAkB;6GAGT,eAAe,YANjB,EACR;2FAKU,eAAe;kBAV3B,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,kBAAkB;qBACnB;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACP,kBAAkB;qBACnB;iBACF;;;ACbD;;;;ACAA;;;;;;"}