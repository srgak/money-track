{"version":3,"file":"select.mjs","sources":["../../../projects/select/src/lib/select.service.ts","../../../projects/select/src/lib/select.component.ts","../../../projects/select/src/lib/select.component.html","../../../projects/select/src/lib/select.module.ts","../../../projects/select/src/public-api.ts","../../../projects/select/src/select.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectService {\n\n  constructor() { }\n}\n","import { Component, forwardRef, Input, OnInit, EventEmitter, Output} from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'input-select',\n  templateUrl: './select.component.html',\n  styles: [],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectComponent implements OnInit, ControlValueAccessor {\n\n  constructor() { }\n\n  @Input() public placeholder: string;\n  @Input() public label: string;\n  @Input() public list;\n  @Input() public controlsGroup: AbstractControl;\n  @Input() public templateList: Element[] = [];\n  \n  public startControl: FormControl = new FormControl();\n  private onChange: Function;\n  private onTouch: Function;\n  private templateNameList;\n\n  writeValue(value: string): void {\n    this.startControl.setValue(value);\n  }\n  registerOnChange(fn: Function): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: Function): void {\n    this.onTouch = fn;\n  }\n  \n  ngOnInit(): void {\n    this.startControl.valueChanges.subscribe(val => {\n      if(this.onChange) {\n        this.onChange(val);\n      }\n    });\n    this.templateNameList = this.list.filter(item => item.otherBlock);\n  }\n\n  change(event: string) {\n    if(this.templateList.length) {\n      this.templateList.forEach(item => item.classList.add('d-none'));\n      this.templateList[\n        this.templateNameList.findIndex(item => item.value === event)\n      ]?.classList.remove('d-none');\n    }\n    if(this.controlsGroup) {\n      this.controlsGroup.reset();\n    }\n  }\n\n}\n","<div class=\"col-12\">\n  <div class=\"input__field\">\n    <nz-select [formControl]=\"startControl\"\n      [activeInput]=\"placeholder\"\n      nzDropdownClassName=\"input__dropdown\"\n      (ngModelChange)=\"change($event)\">\n      <nz-option *ngFor=\"let item of list;\"\n        [nzValue]=\"item.value\"\n        [nzLabel]=\"item.name\"\n        [nzHide]=\"item.hide\"></nz-option>\n    </nz-select>\n    <label>{{label}}</label>\n  </div>\n</div>\n<ng-content></ng-content>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RiseInputModule } from 'dist/rise-input';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { SelectComponent } from './select.component';\n\n\n\n@NgModule({\n  declarations: [\n    SelectComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NzSelectModule,\n    RiseInputModule\n  ],\n  exports: [\n    SelectComponent\n  ]\n})\nexport class SelectModule { }\n","/*\n * Public API Surface of select\n */\n\nexport * from './lib/select.service';\nexport * from './lib/select.component';\nexport * from './lib/select.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;MAKa,aAAa;IAExB,iBAAiB;;0GAFN,aAAa;8GAAb,aAAa,cAFZ,MAAM;2FAEP,aAAa;kBAHzB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCWY,eAAe;IAE1B;QAMgB,iBAAY,GAAc,EAAE,CAAC;QAEtC,iBAAY,GAAgB,IAAI,WAAW,EAAE,CAAC;KARpC;IAajB,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACnC;IACD,gBAAgB,CAAC,EAAY;QAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IACD,iBAAiB,CAAC,EAAY;QAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG;YAC1C,IAAG,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aACpB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;KACnE;IAED,MAAM,CAAC,KAAa;;QAClB,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChE,MAAA,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAC9D,0CAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC/B;QACD,IAAG,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC5B;KACF;;4GA5CU,eAAe;gGAAf,eAAe,2KARf;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,eAAe,CAAC;YAC9C,KAAK,EAAE,IAAI;SACZ;KACF,0BCbH,keAcyB;2FDCZ,eAAe;kBAZ3B,SAAS;+BACE,cAAc,UAEhB,EAAE,aACC;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,qBAAqB,CAAC;4BAC9C,KAAK,EAAE,IAAI;yBACZ;qBACF;0EAMe,WAAW;sBAA1B,KAAK;gBACU,KAAK;sBAApB,KAAK;gBACU,IAAI;sBAAnB,KAAK;gBACU,aAAa;sBAA5B,KAAK;gBACU,YAAY;sBAA3B,KAAK;;;MEAK,YAAY;;yGAAZ,YAAY;0GAAZ,YAAY,iBAZrB,eAAe,aAGf,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,eAAe,aAGf,eAAe;0GAGN,YAAY,YAVd;YACP,YAAY;YACZ,mBAAmB;YACnB,cAAc;YACd,eAAe;SAChB;2FAKU,YAAY;kBAdxB,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,eAAe;qBAChB;oBACD,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;wBACnB,cAAc;wBACd,eAAe;qBAChB;oBACD,OAAO,EAAE;wBACP,eAAe;qBAChB;iBACF;;;ACtBD;;;;ACAA;;;;;;"}